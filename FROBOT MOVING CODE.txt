const int motor1_in1 = 18;
const int motor1_in2 = 19;
const int motor1_en = 21;
const int motor2_in3 = 25;
const int motor2_in4 = 26;
const int motor2_en = 27;
const int duration=1000;
void setup() {
  // put your setup code here, to run once:
  pinMode(motor1_in1, OUTPUT);
  pinMode(motor1_in2, OUTPUT);
  pinMode(motor1_en, OUTPUT);
  pinMode(motor2_in3, OUTPUT);
  pinMode(motor2_in4, OUTPUT);
  pinMode(motor2_en, OUTPUT);
  Serial.begin(115200);
}
void forward(){
  // forward 1
    digitalWrite(motor1_in1, LOW);
    digitalWrite(motor1_in2, HIGH);
    digitalWrite(motor1_en, HIGH);
    digitalWrite(motor2_in3, LOW);
    digitalWrite(motor2_in4, HIGH);
    digitalWrite(motor2_en, HIGH);
    delay(duration);}
void backward(){
  // backward 2
    digitalWrite(motor1_in1, HIGH);
    digitalWrite(motor1_in2, LOW);
    digitalWrite(motor1_en, HIGH);
    digitalWrite(motor2_in3, HIGH);
    digitalWrite(motor2_in4, LOW);
    digitalWrite(motor2_en, HIGH);
    delay(duration);
  }
void left(){
  // left 3
    digitalWrite(motor1_in1, LOW);
    digitalWrite(motor1_in2, HIGH);
    digitalWrite(motor1_en, HIGH);
    digitalWrite(motor2_in3, HIGH);
    digitalWrite(motor2_in4, LOW);
    digitalWrite(motor2_en, HIGH);
    delay(duration);}
void right(){
  // right 4
    digitalWrite(motor1_in1, HIGH);
    digitalWrite(motor1_in2, LOW);
    digitalWrite(motor1_en, HIGH);
    digitalWrite(motor2_in3, LOW);
    digitalWrite(motor2_in4, HIGH);
    digitalWrite(motor2_en, HIGH);
    delay(duration);} 
void brake(){    
// stop 5
    digitalWrite(motor1_in1, LOW);
    digitalWrite(motor1_in2, LOW);
    digitalWrite(motor1_en, HIGH);
    digitalWrite(motor2_in3, LOW);
    digitalWrite(motor2_in4, LOW);
    digitalWrite(motor2_en, HIGH);
   }         
void loop() {
//  int choice=-1;
//  while(Serial.available()==0){
//    }
//  choice=Serial.parseInt();
//  switch(choice){
//    case 1:
//    forward();
//    brake();
//    break;
//    case 2:
//    backward();
//    brake();
//    break;
//    case 3:
//    left();
//    brake();
//    break;
//    case 4:
//    right();
//    brake();
//    break;
//    case 5:
//    brake();
//    break;
//    } 
int times=1;
int steps=3;
int currentstep=0;
int currentjourney=0;
while(currentjourney<times){
while(currentstep<steps){
  forward();
  currentstep++;}
brake();
currentstep=0;
while(currentstep<steps){
  backward();
  currentstep++;}
brake();
}
exit(0);
}